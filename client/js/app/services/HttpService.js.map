{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;kDAEKC,G,EAAI;AACd,4BAAI,CAACA,IAAIC,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACb,+BAAOH,GAAP;AACH;;;wCAEGI,G,EAAK;AAAA;;AACL,+BAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,mCAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBADH,EAEFM,IAFE,CAEG;AAAA,mCAAON,IAAIQ,IAAJ,EAAP;AAAA,yBAFH,CAAP;AAIH;;;yCAEIJ,G,EAAKK,I,EAAM;AAAA;;AACZ,+BAAOJ,MAAMD,GAAN,EAAW;AACdM,qCAAS,EAAC,gBAAe,kBAAhB,EADK;AAEdC,oCAAQ,MAFM;AAGdC,kCAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHQ,yBAAX,EAKNH,IALM,CAKD;AAAA,mCAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBALC,CAAP;AAMH","file":"HttpService.js","sourcesContent":["export class HttpService {\n\n    _handleErrors(res){\n        if (!res.ok) throw new Error(res.statusText);\n        return res;\n    }\n    \n    get(url) {\n        return fetch(url)\n            .then(res => this._handleErrors(res))\n            .then(res => res.json())\n\n    }\n    \n    post(url, dado) {\n        return fetch(url, {\n            headers: {'Content-type':'application/json'},\n            method: 'post',\n            body: JSON.stringify(dado)\n        })\n        .then(res => this._handleErrors(res))\n    }\n}\n\n/*\n\nCOMO ERA\n\nget(url) {\n    return new Promise((resolve, reject) => {\n        let xhr = new XMLHttpRequest();\n        xhr.open('GET', url);\n        xhr.onreadystatechange = () => {\n            if(xhr.readyState == 4)\n                if(xhr.status == 200)\n                    resolve(JSON.parse(xhr.responseText));\n                else\n                    reject(xhr.responseText);\n        };\n        xhr.send();\n    });\n}\n\npost(url, dado) {\n\n        return new Promise((resolve, reject) => {\n\n            let xhr = new XMLHttpRequest();\n            xhr.open(\"POST\", url, true);\n            xhr.setRequestHeader(\"Content-type\", \"application/json\");\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState == 4)\n                    if (xhr.status == 200)\n                        resolve(JSON.parse(xhr.responseText));\n                    else\n                        reject(xhr.responseText);\n            };\n            xhr.send(JSON.stringify(dado));\n            // usando JSON.stringifly para converter objeto em uma string no formato JSON.\n        });\n\n    }\n*/"]}