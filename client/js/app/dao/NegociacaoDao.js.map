{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","_data","_quantidade","_valor","continue","name","clear"],"mappings":";;;;;;;;;;;;;;;AAAQA,sB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;qCAEKC,a;AAET,uCAAYC,UAAZ,EAAuB;AAAA;;AACnB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;;;6CAEQC,U,EAAW;AAAA;;AAChB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AACnC,gCAAIC,UAAU,MAAKN,WAAL,CACGO,WADH,CACe,CAAC,MAAKN,MAAN,CADf,EAC8B,WAD9B,EAEGO,WAFH,CAEe,MAAKP,MAFpB,EAGGQ,GAHH,CAGOP,UAHP,CAAd;;AAKAI,oCAAQI,SAAR,GAAoB,aAAK;AACrBN;AACH,6BAFD;;AAIAE,oCAAQK,OAAR,GAAkB,aAAK;AACnBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,yCAAP;AACH,6BAHD;AAIH,yBAdM,CAAP;AAeH;;;iDAEW;AAAA;;AAER,+BAAO,IAAIF,OAAJ,CAAa,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAErC,gCAAIY,SAAS,OAAKjB,WAAL,CACIO,WADJ,CACgB,CAAC,OAAKN,MAAN,CADhB,EAC+B,WAD/B,EAEIO,WAFJ,CAEgB,OAAKP,MAFrB,EAGIiB,UAHJ,EAAb;;AAKA,gCAAIC,cAAc,EAAlB;;AAEAF,mCAAOP,SAAP,GAAmB,aAAK;AACpB,oCAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;;AAEA,oCAAID,KAAJ,EAAW;AACP,wCAAIE,OAAOF,MAAMG,KAAjB;AACAJ,gDAAYK,IAAZ,CAAiB,IAAI3B,UAAJ,CAAeyB,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CAAjB;AACAP,0CAAMQ,QAAN;AACH,iCAJD,MAIO;AACHxB,4CAAQe,WAAR;AACH;AACJ,6BAVD;;AAYAF,mCAAON,OAAP,GAAiB,aAAK;AAClBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAAT,CAAea,IAA3B;AACAxB,uCAAO,wCAAP;AACH,6BAHD;AAIH,yBAzBM,CAAP;AA2BH;;;iDAGW;AAAA;;AACR,+BAAO,IAAIF,OAAJ,CAAa,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACrC,gCAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGT6B,KAHS,EAAd;;AAKAxB,oCAAQI,SAAR,GAAoB;AAAA,uCAAKN,QAAQ,kCAAR,CAAL;AAAA,6BAApB;AACAE,oCAAQK,OAAR,GAAkB,aAAK;AACnBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,wCAAP;AACH,6BAHD;AAIH,yBAXM,CAAP;AAYH","file":"NegociacaoDao.js","sourcesContent":["import {Negociacao} from \"../models/Negociacao\";\r\n\r\nexport class NegociacaoDao {\r\n\r\n    constructor(connection){\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n    }\r\n\r\n    adiciona(negociacao){\r\n        return new Promise((resolve, reject) =>{\r\n            let request = this._connection\r\n                            .transaction([this._store], 'readwrite')\r\n                            .objectStore(this._store)\r\n                            .add(negociacao);\r\n\r\n            request.onsuccess = e => {\r\n                resolve();\r\n            };\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possível adicionar a negociação');\r\n            };\r\n        });\r\n    }\r\n\r\n    listaTodos(){\r\n\r\n        return new Promise(((resolve, reject) => {\r\n\r\n            let cursor = this._connection\r\n                            .transaction([this._store], 'readwrite')\r\n                            .objectStore(this._store)\r\n                            .openCursor();\r\n\r\n            let negociacoes = [];\r\n\r\n            cursor.onsuccess = e => {\r\n                let atual = e.target.result;\r\n\r\n                if (atual) {\r\n                    var dado = atual.value;\r\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n                    atual.continue();\r\n                } else {\r\n                    resolve(negociacoes);\r\n                }\r\n            };\r\n\r\n            cursor.onerror = e => {\r\n                console.log(e.target.error.name);\r\n                reject(\"Não foi possível listar as negociações\");\r\n            }\r\n        }));\r\n\r\n    }\r\n\r\n\r\n    apagaTodos(){\r\n        return new Promise(((resolve, reject) => {\r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .clear();\r\n\r\n            request.onsuccess = e => resolve('Negociações apagadas com sucesso');\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possível apagar as negociações');\r\n            }\r\n        }));\r\n    }\r\n}"]}